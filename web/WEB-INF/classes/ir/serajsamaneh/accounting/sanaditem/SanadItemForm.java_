package ir.serajsamaneh.accounting.sanaditem;

import ir.serajsamaneh.accounting.base.BaseAccountingForm;
import ir.serajsamaneh.accounting.saalmaali.SaalMaaliForm;

import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.Map;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;


public class SanadItemForm extends BaseAccountingForm<SanadItemEntity,Long> {




	@Override
	protected SanadItemService getMyService() {
		return sanadItemService;
	}
	
	SanadItemService sanadItemService;
	
	public void setSanadItemService(SanadItemService sanadItemService) {
		this.sanadItemService = sanadItemService;
	}
	
	public SanadItemService getSanadItemService() {
		return sanadItemService;
	}

	Integer saalMaali = SaalMaaliForm.getSaalMaaliFromSession();
	
	public Integer getSaalMaali() {
		return saalMaali;
	}

	public void setSaalMaali(Integer saalMaali) {
		this.saalMaali = saalMaali;
	}

	@Override
	public String save() {
		 convertToSanadItems("");
		return super.save();
	}

	private void convertToSanadItems(String str) {
		ObjectMapper mapper = new ObjectMapper();
		try {
			Map<Long, SanadItemDTO> map = mapper.readValue(str, new TypeReference<Map<Long, SanadItemDTO>>(){});
			for (SanadItemDTO sanadItem: map.values()) {
				System.out.println(sanadItem.getDescription());
				System.out.println(sanadItem.getBedehkar());
				System.out.println(sanadItem.getBestankar());
				System.out.println("------------");
			}
		} catch (JsonParseException e) {
			e.printStackTrace();
		} catch (JsonMappingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	String type;
	Long hesabKolId;
	Date fromDate;;
	Date toDate;;
	public Date getFromDate() {
		return fromDate;
	}

	public void setFromDate(Date fromDate) {
		this.fromDate = fromDate;
	}

	public Date getToDate() {
		return toDate;
	}

	public void setToDate(Date toDate) {
		this.toDate = toDate;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public Long getHesabKolId() {
		return hesabKolId;
	}

	public void setHesabKolId(Long hesabKolId) {
		this.hesabKolId = hesabKolId;
	}

	public List<SanadItemDTO> getItemsGroupByLevel(){
		return getMyService().getItemsGroupByKol(getSaalMaali(), type, hesabKolId, fromDate, toDate);
	}
	
	public List<SanadItemDTO> getIncomeGroupByLevel(){
		return getMyService().getIncomeGroupByKol(getSaalMaali());
	}
	
	public List<SanadItemDTO> getExpenseGroupByLevel(){
		return getMyService().getExpenseGroupByKol(getSaalMaali());
	}
	public List<SanadItemDTO> getAssetsGroupByLevel(){
		return getMyService().getAssetsGroupByKol(getSaalMaali());
	}
	
	public List<SanadItemDTO> getLiabilitiesGroupByLevel(){
		return getMyService().getLiabilitiesGroupByKol(getSaalMaali());
	}
	
	public Double getSoodeVijeh(){
		Double soodeVijeh = 0D;
// daramad bestankar ast
		if(getIncomeGroupByLevel()!=null)
		for (SanadItemDTO income : getIncomeGroupByLevel()) {
			Double bedehkar = income.getBedehkar();
			Double bestankar = income.getBestankar();
			if(bedehkar!=null)
				soodeVijeh -= bedehkar;
			if(bestankar!=null)
				soodeVijeh += bestankar;
		}
// hazine bestankar ast
		for (SanadItemDTO income : getExpenseGroupByLevel()) {
			Double bedehkar = income.getBedehkar();
			Double bestankar = income.getBestankar();
			if(bedehkar!=null)
				soodeVijeh += bedehkar;
			if(bestankar!=null)
				soodeVijeh -= bestankar;
		}
		return soodeVijeh;
	}

	public static void main(String[] args) {
		new SanadItemForm().convertToSanadItems("{\"1\":{\"bedehkar\":\"133\",\"bestankar\":\"33\"},\"2\":{\"bedehkar\":\"144\",\"bestankar\":\"44\"}}");
	}
}